#!/bin/bash
#
# ./startSmalltalkServer31 runs a server in a Gem.  See the class WAGemStoneRunSmalltalkServer and WAGemStoneSmalltalkServer
#     - first argument is the name of the WAGemStoneSmalltalkServer and also a label used to name pid and log files
#     - second argument is a port number
#

if [ -s $GEMSTONE/seaside/etc/gemstone.secret ]; then
    . $GEMSTONE/seaside/etc/gemstone.secret
else
    echo 'Missing password file $GEMSTONE/seaside/etc/gemstone.secret'
    exit 1
fi


#using daemontools so comment this out:
#cat << EOF | nohup $GEMSTONE/bin/topaz -l -e $GEMSTONE/seaside/etc/seaside30.conf 2>&1 >> $GEMSTONE_LOGDIR/serviceVM.log &

exec $GEMSTONE/bin/topaz -l -T200000 2>&1 <<EOF

set user DataCurator pass $GEMSTONE_CURATOR_PASS gems $GEMSTONE_NAME

display oops
iferror where

login

run
"record gems pid in the pid file"
| file |
(GsFile isServerDirectory: '$GEMSTONE_DATADIR') ifFalse: [ ^nil ].
file := GsFile openWriteOnServer: '$GEMSTONE_DATADIR/serviceVM.pid'.
file nextPutAll: (System gemVersionReport at: 'processId') printString.
file cr.
file close.
(ObjectLogEntry
  info: 'SVCE: startup'
  object: 'pid: ', (System gemVersionReport at: 'processId') printString) addToLog.
System commitTransaction
    ifFalse: [
      System abortTransaction.
      nil error: 'Could not commit ObjectLog entry' ].
%

run
| x |
"set _cacheName: for Gem to get unique id in statmon output. see http://code.google.com/p/glassdb/issues/detail?id=132"
System _cacheName: ((x := '$1-' , (GsSession serialOfSession: System session) printString , '-' , System myUserProfile userId) copyFrom: 1 to: (x size min: 31)).
%

run
| count|
GsProcess usingNativeCode not
  ifTrue: [
    "Enable remote Breakpoing handling"
    Breakpoint trappable: true.
    GemToGemAnnouncement installStaticHandler.
    System commitTransaction ifFalse: [ nil error: 'Could not commit for GemToGemSignaling' ]. 
  ].

System transactionMode: #manualBegin.

Exception 
  installStaticException: 
    [:ex :cat :num :args |
      "Run the abort in a lowPriority process, since we must acquire the
       transactionMutex."
      [
        GRPlatform current transactionMutex 
          critical: [ 
            GRPlatform current doAbortTransaction ].
        System enableSignaledAbortError.
      ] forkAt: Processor lowestPriority.
    ]
  category: GemStoneError
  number: 6009
  subtype: nil.
System enableSignaledAbortError.
"This thread is needed to handle the SigAbort exception, when the primary
 thread is blocked on an accept. Assuming default 60 second 
 STN_GEM_ABORT_TIMEOUT, wake up at 30 second intervals."
[ 
  [ true ] whileTrue: [ (Delay forSeconds: 30) wait ].
] forkAt: Processor lowestPriority.


GsSecureSocket useCACertificateFileForClients: '/etc/ssl/certs/ca-certificates.crt'. 
"does not return"
count := 0.
WAGemStoneServiceVMTask vmStartup.
[true] whileTrue: [ [
  "run service tasks"
  WAGemStoneServiceVMTask performTasks: count.
  "Sleep for a 200ms"
  (Delay forMilliseconds: 200) wait.
  count := count + 1]
    on: Error, Halt, Breakpoint
    do: [:ex |
          System inTransaction
                ifTrue: [
          DebuggerLogEntry createContinuationLabeled: 'SVCE continuation'.
          System commitTransaction.
          System beginTransaction ]
        ifFalse: [
          System beginTransaction.
          DebuggerLogEntry createContinuationLabeled: 'SVCE continuation'.
          System commitTransaction].
      ex isResumable ifTrue: [ex resume]]].
%
run
GemToGemAnnouncement uninstallStaticHandler.
System beginTransaction.
(ObjectLogEntry
  fatal: '$SVCE: topaz exit'
  object:
        'pid: ', (System gemVersionReport at: 'processId') printString) addToLog.
System commitTransaction.
%
EOF

